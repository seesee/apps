const CACHE_NAME="activity-tracker-2025.08.13.41",urlsToCache=["./","./index.html","./sw.js"];async function performAutomaticBackup(){try{console.log("üöÄ Performing automatic backup in background...");if(!await checkBackupThrottling())return void console.log("‚è∏Ô∏è Automatic backup throttled - too soon since last backup");const e=await getBackupDataFromStorage();if(!e)return void console.log("No backup data available");const t=new Date,n=`activity-backup-${t.toISOString().replace(/[:.]/g,"-").slice(0,19)}.json`,i={filename:n,size:new Blob([JSON.stringify(e,null,2)],{type:"application/json"}).size,timestamp:t.toISOString(),status:"completed"};await showBackupCompletedNotification(i),self.clients.matchAll().then(e=>{e.forEach(e=>{e.postMessage({type:"AUTOMATIC_BACKUP_COMPLETED",backupInfo:i})})}),console.log("‚úÖ Automatic backup completed:",n)}catch(e){console.error("‚ùå Automatic backup failed:",e),await self.registration.showNotification("Backup Failed",{body:`Automatic backup failed: ${e.message}`,icon:'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23ef4444"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/></svg>',tag:"backup-error",requireInteraction:!0})}}async function getBackupDataFromStorage(){return new Promise(e=>{self.clients.matchAll().then(t=>{if(t.length>0){const n=t[0],i=new MessageChannel;i.port1.onmessage=t=>{e(t.data.backupData)},n.postMessage({type:"REQUEST_BACKUP_DATA"},[i.port2])}else try{e(null)}catch(t){console.error("Could not access storage from Service Worker:",t),e(null)}})})}async function checkBackupThrottling(){return new Promise(e=>{self.clients.matchAll().then(t=>{if(t.length>0){const n=t[0],i=new MessageChannel;i.port1.onmessage=t=>{e(t.data.canBackup)},n.postMessage({type:"CHECK_BACKUP_THROTTLING"},[i.port2])}else console.log("No clients available for throttling check, allowing backup"),e(!0)})})}async function showBackupCompletedNotification(e){const t={body:`Your activity data has been automatically backed up.\nFile size: ${(e.size/1024).toFixed(1)} KB`,icon:'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%2310b981"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/></svg>',badge:'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%2310b981"><circle cx="12" cy="12" r="10"/></svg>',tag:"automatic-backup-success",actions:[{action:"view_backups",title:"üìÅ View Backups"},{action:"dismiss",title:"Dismiss"}],data:e};return self.registration.showNotification("üíæ Auto Backup Complete",t)}function broadcastMessage(e){return clients.matchAll({type:"window"}).then(t=>{t.forEach(t=>{t.postMessage(e)})})}function generateId(){return Date.now().toString()+Math.random().toString(36).substr(2,9)}function extractHashtags(e){if(!e||"string"!=typeof e)return[];const t=/#([\w][\w-]*)/g,n=[],i=new Set;let o;for(;null!==(o=t.exec(e));){const e=o[1],t=e.toLowerCase();i.has(t)||(i.add(t),n.push(e))}return n}function isAppClient(e){try{const t=new URL(e),n=t.pathname,i=n.split("/").pop();return!!n.includes("/activity-tracker/")||("/"===n||""===n||t.origin===self.location.origin&&!(!i.startsWith("index.")||!i.endsWith(".html")))}catch(e){return!1}}function isAppOpen(){return clients.matchAll({type:"window"}).then(e=>e.some(e=>isAppClient(e.url)))}function getAppUrl(){const e=self.registration.scope;console.log("Service Worker scope:",e);try{new URL(e);return e}catch(e){return console.error("Error getting app URL from scope:",e),"./"}}async function getDiagnostics(){const e={version:CACHE_NAME,state:self.registration?self.registration.active?.state:"unknown",scope:self.registration?.scope||"unknown",updateViaCache:self.registration?.updateViaCache||"unknown",caches:{},totalCacheSize:0,cacheStats:{},performance:{installTime:null,activateTime:null,uptime:Date.now()-(self.performance?.timeOrigin||Date.now())},clients:{count:0,types:{},urls:[]},events:{fetchRequests:self.fetchCounter||0,notificationClicks:self.notificationCounter||0,pushMessages:self.pushCounter||0,messagesSent:self.messageCounter||0},storage:{},capabilities:{backgroundSync:"sync"in self.registration,pushMessaging:"pushManager"in self.registration,periodicBackgroundSync:"periodicSync"in self.registration,paymentHandler:"paymentManager"in self.registration,notifications:"showNotification"in self.registration},timestamp:(new Date).toISOString()};try{const t=await caches.keys();e.caches.names=t,e.caches.count=t.length;let n=0;for(const i of t)try{const t=await caches.open(i),o=await t.keys(),s={keyCount:o.length,keys:o.map(e=>e.url),size:0};for(const e of o)try{const n=await t.match(e);if(n){const e=await n.blob();s.size+=e.size}}catch(e){}e.cacheStats[i]=s,n+=s.size}catch(t){e.cacheStats[i]={error:t.message}}e.totalCacheSize=n;const i=await clients.matchAll({includeUncontrolled:!0});if(e.clients.count=i.length,i.forEach(t=>{const n=t.type||"unknown";e.clients.types[n]=(e.clients.types[n]||0)+1,e.clients.urls.push({url:t.url,type:t.type,id:t.id,focused:t.focused||!1})}),"storage"in navigator&&"estimate"in navigator.storage){const t=await navigator.storage.estimate();e.storage={quota:t.quota,usage:t.usage,usageDetails:t.usageDetails||{},percentUsed:t.quota?Math.round(t.usage/t.quota*100):0}}self.registration&&(e.registration={scope:self.registration.scope,updateViaCache:self.registration.updateViaCache,installing:self.registration.installing?.state||null,waiting:self.registration.waiting?.state||null,active:self.registration.active?.state||null})}catch(t){e.error=t.message,e.errorStack=t.stack}return e}self.addEventListener("install",e=>{console.log("Service Worker installing..."),e.waitUntil(caches.open(CACHE_NAME).then(e=>(console.log("Opened cache"),Promise.allSettled(urlsToCache.map(t=>e.add(t).catch(e=>(console.warn(`Failed to cache ${t}:`,e.message),null)))).then(e=>{const t=e.filter(e=>"fulfilled"===e.status).length,n=e.filter(e=>"rejected"===e.status).length;console.log(`Cache results: ${t} successful, ${n} failed`)}))).catch(e=>{console.error("Cache installation failed:",e)})),self.skipWaiting()}),self.addEventListener("activate",e=>(console.log("Service Worker activated"),e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==CACHE_NAME)return console.log("Deleting old cache:",e),caches.delete(e)})))),self.clients.claim())),self.addEventListener("fetch",e=>{if(e.request.url.startsWith("http")){e.request.url.includes("index.html")||e.request.url.endsWith("/")||e.request.url.includes("sw.js")?e.respondWith(fetch(e.request).then(t=>{const n=t.clone();return caches.open(CACHE_NAME).then(t=>{t.put(e.request,n)}),t}).catch(()=>caches.match(e.request).then(t=>{if(t)return t;if("navigate"===e.request.mode)return new Response("App offline",{status:200,statusText:"OK",headers:{"Content-Type":"text/html"}});throw new Error("No cached response available")}))):e.respondWith(caches.match(e.request).then(t=>t||fetch(e.request)).catch(t=>{throw console.warn("Fetch failed for:",e.request.url,t.message),t}))}}),self.addEventListener("notificationclick",e=>{console.log("Notification clicked:",e.notification.tag),e.notification.close(),"activity-reminder"===e.notification.tag&&e.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then(e=>{for(const t of e)if(isAppClient(t.url))return console.log("Found existing client, focusing:",t.url),t.focus().then(()=>{t.postMessage({type:"navigate-to-tracker",source:"notification-click"})});if(console.log("No existing client found, opening new window"),clients.openWindow){const e=getAppUrl();return console.log("Opening URL:",e),clients.openWindow(e).then(e=>{e&&setTimeout(()=>{e.postMessage({type:"navigate-to-tracker",source:"notification-click"})},1e3)})}}).catch(e=>{console.error("Error handling notification click:",e)}))}),self.addEventListener("notificationactionclick",e=>{if(console.log("Notification action clicked:",e.action),e.notification.close(),"reply"===e.action){const t=e.reply;if(console.log("User replied:",t),t&&t.trim()){const n=new Date,i={id:generateId(),activity:t.trim(),description:"from notification",timestamp:n.toISOString(),created:n.toISOString(),isTodo:!1,isNote:!1,tags:extractHashtags(t.trim()),dueDate:null,startedAt:null};e.waitUntil(clients.matchAll({type:"window"}).then(e=>{let n=!1;for(const o of e)isAppClient(o.url)&&(o.postMessage({type:"add-entry",entry:i}),o.postMessage({type:"populate-activity-input",text:t.trim()}),n=!0);if(!n){const e=getAppUrl();return clients.openWindow(e).then(e=>{e&&setTimeout(()=>{e.postMessage({type:"add-entry",entry:i}),e.postMessage({type:"populate-activity-input",text:t.trim(),source:"notification-action"})},2e3)})}}))}}else"open"===e.action&&e.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then(e=>{for(const t of e)if(isAppClient(t.url))return console.log("Found existing client, focusing:",t.url),t.focus().then(()=>{t.postMessage({type:"navigate-to-tracker",source:"notification-action-open"})});if(console.log("No existing client found, opening new window"),clients.openWindow){const e=getAppUrl();return console.log("Opening URL:",e),clients.openWindow(e).then(e=>{e&&setTimeout(()=>{e.postMessage({type:"navigate-to-tracker",source:"notification-action-open"})},1e3)})}}).catch(e=>{console.error("Error handling notification open action:",e)}))}),self.addEventListener("push",e=>{console.log("Push message received");let t={};if(e.data)try{t=e.data.json()}catch(n){t={title:"Activity Tracker",body:e.data.text()}}const n={body:t.body||"New notification from Activity Tracker",icon:'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23667eea"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/></svg>',badge:'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23667eea"><circle cx="12" cy="12" r="10"/></svg>',tag:t.tag||"push-notification",requireInteraction:!0,actions:[{action:"reply",type:"text",title:"Log Activity",placeholder:"What are you working on?"},{action:"dismiss",title:"Dismiss"}],data:t};e.waitUntil(self.registration.showNotification(t.title||"Activity Tracker",n))}),self.addEventListener("sync",e=>{console.log("Background sync triggered:",e.tag),"automatic-backup"===e.tag?e.waitUntil(performAutomaticBackup()):"sync-activities"===e.tag&&e.waitUntil(Promise.resolve().then(()=>{console.log("Activities synced")}))}),self.addEventListener("message",e=>{console.log("Message received in SW:",e.data),e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting(),e.data&&"GET_VERSION"===e.data.type&&e.ports[0].postMessage({version:CACHE_NAME}),e.data&&"GET_DIAGNOSTICS"===e.data.type&&getDiagnostics().then(t=>{e.ports[0].postMessage(t)}).catch(t=>{e.ports[0].postMessage({error:t.message})})}),self.addEventListener("error",e=>{console.error("Service Worker error:",e.error)}),self.addEventListener("unhandledrejection",e=>{console.error("Service Worker unhandled rejection:",e.reason)}),self.fetchCounter=0,self.notificationCounter=0,self.pushCounter=0,self.messageCounter=0,self.addEventListener("fetch",()=>{self.fetchCounter=(self.fetchCounter||0)+1}),self.addEventListener("notificationclick",()=>{self.notificationCounter=(self.notificationCounter||0)+1}),self.addEventListener("push",()=>{self.pushCounter=(self.pushCounter||0)+1}),self.addEventListener("message",()=>{self.messageCounter=(self.messageCounter||0)+1}),console.log("Service Worker loaded");